@page "/Personas"
@page "/Personas/{personaId:int}"
@using PersonaBlazorApp.Models
@using PersonaBlazorApp.BLL

<h3>Registro de Personas</h3>

<EditForm Model="personas" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />

    <div class="form-row align-items-center">
        <div class="col">
            <div class="form-group">
                <label>ID:</label>
                <div class="input-group">
                    <InputNumber @bind-Value="personas.personaId" class="form-control col-4" />
                    <ValidationMessage For="(() => personas.personaId)"></ValidationMessage>
                    <div class="input-group-append">
                        <button type="button" class="btn btn-primary input-group-text" @onclick="Buscar">Buscar</button>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="form-group">
        <label>NOMBRES:</label>
        <InputText @bind-Value="personas.nombre" class="form-control" />
        <ValidationMessage For="@(() => personas.nombre)" />
    </div>

    <div class="form-group">
        <label>TELEFONO:</label>
        <InputText @bind-Value="personas.telefono" class="form-control" />
        <ValidationMessage For="@(() => personas.telefono)" />
    </div>

    <div class="form-group">
        <label>CEDULA:</label>
        <InputText @bind-Value="personas.cedula" class="form-control" />
        <ValidationMessage For="@(() => personas.cedula)" />
    </div>

    <div class="form-group">
        <label>DIRECCION:</label>
        <InputText @bind-Value="personas.direccion" class="form-control" />
        <ValidationMessage For="@(() => personas.direccion)" />
    </div>

    <div class="form-group">
        <label>NOMBRES:</label>
        <InputDate @bind-Value="personas.fecha" class="form-control" />
        <ValidationMessage For="@(() => personas.fecha)" />
    </div>

    <div class="card-footer">
        <div class="form-group text-center" display: inline-block>
            <button type="button" class="btn btn-lg btn-primary" @onclick="Nuevo">Nuevo</button>
            <button type="submit" class="btn btn-lg btn-success" @onclick="Guardar">Guardar</button>
            <button type="button" class="btn btn-lg btn-danger" @onclick="Eliminar">Eliminar</button>
        </div>
    </div>

    <h2>@estado</h2>

</EditForm>



@code {

    Personas personas = new Personas();
    string estado = "";

    [Parameter]
    public int personaId { get; set; }

    private void Nuevo()
    {
        this.personas = new Personas();
        estado = "";
    }

    protected override void OnInitialized()
    {
        Nuevo(); 
        if (personaId > 0)
        {
            personas = PersonasBLL.Buscar(personaId);
        }
    }

    private void Guardar()
    {
        bool paso;
        paso = PersonasBLL.Guardar(personas);

        if (paso)
        {
            Nuevo();
            //toast.ShowSuccess("Guardado correctamente");
            estado = "Guardado...";
        }
        else
        {
            estado = "No se pudo guardar...";
        }
        //toast.ShowError("No fue posible guardar");
    }

    private void Buscar()
    {
        var encontrado = PersonasBLL.Buscar(personas.personaId);
        if (encontrado != null)

            this.personas = encontrado;
        else

            //toast.ShowWarning("No encontrado");
            estado = "no se encontro..";
    }

    private void Eliminar()
    {
        bool elimino;

        elimino = PersonasBLL.Eliminar(personas.personaId);

        if (elimino)
        {
            Nuevo();
            estado = "Eliminado...";
            //toast.ShowSuccess("Eliminado correctamente");
        }
        else
            estado = "No se pudo eliminar..";
        //toast.ShowError("No fue posible eliminar");
    }
}
